name: Deploy Next.js site to GitHub Pages

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # Step 3: Cache npm dependencies and Next.js build cache
      - name: Cache npm dependencies and Next.js build cache
        uses: actions/cache@v4
        with:
          # Cache npm dependencies and .next cache directory
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache when package-lock.json or source files change
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # Restore cache if only the source files have changed
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      # Step 4: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 5: Build the Next.js app
      - name: Build Next.js app
        run: npm run build

      # Step 6: Export the static site
      - name: Export static site
        run: npm run export

      # Step 7: Upload the artifact for deployment to GitHub Pages
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Step 8: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
